@book{swps,
 author = {Henry H. Liu},
 title = {Software Performance and Scalability: A Quantitative Approach},
 year = {2009},
 isbn = {978-0-470-46253},
 publisher = {John Wiley \& Sons}
}

@book{mte241,
 author = {Douglas Wilhelm Harder and Jeff Zarnett and Vajih Montaghami},
 title = {A Practical Introduction to Real-Time Systems for Undergraduate Engineering},
 year = {2014},
 howpublished = { \url {https://ece.uwaterloo.ca/~dwharder/icsrts/Lecture\_materials/A\_practical\_introduction\_to\_real-time\_systems\_for\_undergraduate\_engineering.pdf} },
 note = {Online; version 0.14.12.22}
}

@misc{cafgithub,
 author = {Julia Evans and Karmal Marhubi},
 title = {Do you know how much your computer can do in a second?},
 year = {2015},
 url = {http://computers-are-fast.github.io/},
 note = {Online; accessed 28-October-2015}
}

@InProceedings{cpu2006,
  author = 		 {A. Kejariwal and A.V. Veidenbaum and A. Nicolau and X. Tian and M. Girkar and H. Saito and U. Banerjee},
  title = 		 {{Comparative architectural characterization of SPEC CPU2000 and CPU2006 benchmarks on the Intel Core 2 Duo processor}},
  booktitle = {Proceedings, International Conference on Embedded Computer Systems: Architectures, Modeling, and Simulation; SAMOS},
  year = 	 {2008}
}

@book{osc,
 author = {Abraham Silberschatz and Peter Baer Galvin and Greg Gagne},
 title = {Operating System Concepts (9th Edition)},
 year = {2013},
 isbn = {978-1118063330},
 publisher = {John Wiley \& Sons},
} 

@book{osi,
 author = {William Stallings},
 title = {Operating Systems Internals and Design Principles (8th Edition)},
 year = {2014},
 isbn = {978-0133805913},
 publisher = {Prentice Hall},
} 

@misc{mispredict,
 author = {Michael Kerrisk},
 title = {How much do \_\_builtin\_expect(), likely(), and unlikely() improve performance?},
 url = {http://blog.man7.org/2012/10/how-much-do-builtinexpect-likely-and.html},
 note = {Online; accessed 12-November-2015}
}

@misc{extremescaling,
 author = {Richard McDougall},
 title = {Extreme Software Scaling},
 year = {2005},
 url = {http://queue.acm.org/detail.cfm?id=1095419},
 note = {Online; accessed 14-November-2015}
}

@misc{bigocheatsheet,
 author = {Eric Rowell and others},
 title = {Know Thy Complexities!},
 year = {2015},
 url = {http://bigocheatsheet.com/},
 note = {Online; accessed 14-November-2015}
}

@InProceedings{machThreads,
  author = 		 {Avadis Tevanian and Richard F. Rashid and David B. Golub and David L. Black and Eric Cooper and Michael W. Young},
  title = 		 {Mach Threads and the {UNIX} Kernel: The Battle for Control},
  booktitle = {Proceedings, Summer 1987 USENIX Conference},
  year = 	 {1987}
}

@book{insideOS2,
 author = {Gordon Letwin},
 title = {Inside {OS/2}},
 year = {1988},
 publisher = {Microsoft Press},
 isbn = {978-1556151170}
}

@misc{pthreads,
 author = {Blaise Barney},
 title = {{POSIX Threads Programming}},
 year = {2014},
 url = {https://computing.llnl.gov/tutorials/pthreads/},
 note = {Online; accessed 1-March-2015}
}

@book{mos,
 author = {Andrew S. Tanenbaum},
 title = {Modern Operating Systems, 3rd Edition},
 year = {2008},
 isbn = {978-01360066332},
 publisher = {Prentice Hall}
}

@inproceedings{Attiya:2011:LOE:1926385.1926442,
 author = {Attiya, Hagit and Guerraoui, Rachid and Hendler, Danny and Kuznetsov, Petr and Michael, Maged M. and Vechev, Martin},
 title = {Laws of order: expensive synchronization in concurrent algorithms cannot be eliminated},
 booktitle = {Proceedings of the 38th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 series = {POPL '11},
 year = {2011},
 isbn = {978-1-4503-0490-0},
 location = {Austin, Texas, USA},
 pages = {487--498},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1926385.1926442},
 acmid = {1926442},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {algorithms, concurrency, lower bounds, memory barriers, memory fences},
} 

@Misc{mckenney11:_concur,
  author = 	 {Paul McKenney},
  title = 	 {Concurrent code and expensive instructions},
  howpublished = {Linux Weekly News, \url{http://lwn.net/Articles/423994/}},
  month = 	 {January},
  year = 	 2011
}


@misc{solarisstudio,
    author = {Oracle},
    title = {{Oracle Solaris Studio 12 Documentation}},
    year = {2014},
    url = {http://www.oracle.com/technetwork/documentation/solaris-studio-12-192994.html},
    note = {Online; accessed 15-November-2015}
}

@misc{java:threadpoolexecutor,
    author = {Oracle},
    title = {{Class ThreadPoolExecutor}},
    year = {2010},
    url = {http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.html},
    note = {Online; accessed 15-November-2015}
}

@misc{csharp:threadpool,
    author = {Microsoft Corporation},
    title = {{How to Use a Thread Pool (C\# Programming Guide)}},
    year = {2005},
    url = {http://msdn.microsoft.com/en-us/library/3dasc8as%28v=vs.80%29.aspx},
    note = {Online; accessed 15-November-2015}
}

@misc{gnome:threadpool,
    author = {{The GNOME Project}},
    title = {Thread Pools},
    year = {2015},
    url = {http://library.gnome.org/devel/glib/unstable/glib-Thread-Pools.html},
    note = {Online; accessed 15-November-2015}
}

@article{Ayguade:2009:DOT:1512157.1512430,
 author = {Ayguad\'{e}, Eduard and Copty, Nawal and Duran, Alejandro and Hoeflinger, Jay and Lin, Yuan and Massaioli, Federico and Teruel, Xavier and Unnikrishnan, Priya and Zhang, Guansong},
 title = {The Design of {OpenMP} Tasks},
 journal = {IEEE Trans. Parallel Distrib. Syst.},
 volume = {20},
 issue = {3},
 month = {March},
 year = {2009},
 issn = {1045-9219},
 pages = {404--418},
 numpages = {15},
 url = {http://portal.acm.org/citation.cfm?id=1512157.1512430},
 acmid = {1512430},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Concurrent, distributed, and parallel languages, Concurrent Programming, Concurrent programming structures},
} 

@inproceedings{Cantrill:2004:DIP:1247415.1247417,
 author = {Cantrill, Bryan M. and Shapiro, Michael W. and Leventhal, Adam H.},
 title = {Dynamic instrumentation of production systems},
 booktitle = {Proceedings of the annual conference on USENIX Annual Technical Conference},
 series = {ATEC '04},
 year = {2004},
 location = {Boston, MA},
 pages = {15--28},
 url = {http://portal.acm.org/citation.cfm?id=1247415.1247417},
 acmid = {1247417},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@InProceedings{Rinard:2010:PSA:1932682.1869525,
 author = {Rinard, Martin and Hoffmann, Henry and Misailovic, Sasa and Sidiroglou, Stelios},
 title = {Patterns and statistical analysis for understanding reduced resource computing},
 booktitle = {Proceedings of Onward! 2010},
 month = {October},
 year = {2010},
 pages = {806--821},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/1932682.1869525},
 acmid = {1869525},
 publisher = {ACM},
 address = {Reno/Tahoe, NV, USA},
 keywords = {cyclic memory allocation, discarding tasks, loop perforation, reduced resource computing, statistical analysis},
} 


@InProceedings{Rinard:2007:EarlyPhaseTermination,
  author = 	 {Martin Rinard},
  title = 	 {Using Early Phase Termination to Eliminate Load Imbalances at Barrier Synchronization Points},
  booktitle = {Proceedings of OOPSLA 2007},
  pages = 	 {369--386},
  year = 	 2007,
  month =        {October},
  address = 	 {Montreal, Quebec, Canada}}

@TechReport{hoffmann09:_using_code_perfor_improv_perfor,
  author = 	 {Henry Hoffmann and Sasa Misailovic and Stelios Sidiroglou and Anant Agarwal and Martin Rinard},
  title = 	 {Using Code Perforation to Improve Performance, Reduce Energy Consumption, and Respond to Failures},
  institution =  {MIT CSAIL},
  year = 	 2009,
  number = 	 {MIT-CSAIL-TR-2009-042},
  address = 	 {Cambridge, MA},
  month = 	 {September}}


@misc{gplus:concurrent,
    author = {Robert Love},
    title = {What is the ideal design for a server process in Linux that handles concurrent socket I/O},
    year = {2013},
    url = {https://plus.google.com/+RobertLove/posts/VPMT8ucAcFH},
    note = {Online; accessed 23-November-2015}
}

@misc{lttpd,
    author = {Lighty Team},
    title = {{Lighty 1.5.0 and Linux-aio}},
    year = {2006},
    url = {http://blog.lighttpd.net/articles/2006/11/12/lighty-1-5-0-and-linux-aio/},
    note = {Online; accessed 23-November-2015}
}

@misc{nod.js,
    author = {Travis Glines},
    title = {nod.js},
    year = {2011},
    url = {https://github.com/tglines/nodrr/blob/master/controllers/nod.js},
    note = {Online; accessed 23-November-2015}
}

@misc{valgrind:tools,
    author = {Valgind Developers},
    title = {Valgrind Tool Suite},
    year = {2015},
    url = {http://valgrind.org/info/tools.html},
    note = {Online; accessed 24-November-2015}
}

@misc{cachegrind,
    author = {Valgrind Developers},
    title = {Cachegrind: a cache and branch-prediction profiler},
    year = {2015},
    url = {http://valgrind.org/docs/manual/cg-manual.html},
    note = {Online; accessed 25-November-2015}
}

@misc{helgrind,
    author = {Valgrind Developers},
    title = {Helgrind: a thread error detector},
    year = {2015},
    url = {http://valgrind.org/docs/manual/hg-manual.html},
    note = {Online; accessed 25-November-2015}
}

@misc{cppatomics,
    author = {{C++ Reference}},
    title = {std::memory\_order},
    year = {2015},
    url = {http://en.cppreference.com/w/cpp/atomic/memory\_order},
    note = {Online; accessed 6-December-2015}
}

@misc{bmref1,
    author = {Bartosz Milewski},
    title = {C++ Atomics and Memory Ordering},
    year = {2008},
    url = {http://bartoszmilewski.com/2008/12/01/c-atomics-and-memory-ordering/}, 
    note = {Online; accessed 6-December-2015}
}

@misc{bmref2,
    author = {Bartosz Milewski},
    title = {The Inscrutable C++ Memory Model},
    year = {2008},
    url = {http://bartoszmilewski.com/2008/12/23/the-inscrutable-c-memory-model/},
    note = {Online; accessed 6-December-2015}
}

@misc{cellperf,
    author = {Mike Acton},
    title = {Demystifying the Restrict Keyword},
    year = {2006},
    url = {http://cellperformance.beyond3d.com/articles/2006/05/demystifying-the-restrict-keyword.html},
    note = {Online; accessed 7-December-2015}
}

@misc{joel:functional,
    author = {Joel Spolsky},
    title = {The Perils of JavaSchools},
    year = {2005},
    url = {http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html},
    note = {Online; accessed 8-December-2015}
}

@misc{tont:threadsafe,
    author = {Raymond Chen},
    title = {The difference between thread-safety and re-entrancy},
    year = {2004},
    url = {https://blogs.msdn.microsoft.com/oldnewthing/20040629-00/?p=38643/},
    note = {Online; accessed 8-December-2015}
}

@misc{autopar,
    author = {GNU Compiler Collection},
    title = {Automatic Parallelization in GCC},
    year = {2012},
    url = {https://gcc.gnu.org/wiki/AutoParInGCC},
    note = {Online; accessed 8-December-2015}
}

@misc{autopar:related,
    author = {GNU Compiler Collection},
    title = {Autopar's(in trunk) Algorithms},
    year = {2009},
    url = {https://gcc.gnu.org/wiki/AutoparRelated},
    note = {Online; accessed 8-December-2015}
}

@misc{omptutorial,
    author = {Blaise Barney},
    title = {OpenMP},
    year = {2015},
    url = {https://computing.llnl.gov/tutorials/openMP/},
    note = {Online; accessed 12-December-2015}
}

@misc{flush,
    author = {Michael Suess},
    title = {Please Don't Rely on Memory Barriers for Synchronization},
    year = {2007},
    url = {http://www.thinkingparallel.com/2007/02/19/please-dont-rely-on-memory-barriers-for-synchronization/},
    note = {Online; accessed 12-December-2015}
}

@misc{so:volatile,
    author = {Stack Exchange Inc.},
    title = {{Using C/Pthreads: do shared variables need to be volatile?}},
    year = {2008},
    url = {http://stackoverflow.com/questions/78172/using-c-pthreads-do-shared-variables-need-to-be-volatile},
    note = {Online; accessed 14-December-2015}
}

@misc{abba,
    author = {Abba},
    title = {Waterloo},
    year = {1974},
    url = {https://www.youtube.com/watch?v=Sj_9CiNkkn4},
    note = {Online; accessed 14-December-2015}
}

@misc{abaproblem,
    author = {Damian Dechev and Peter Pirkelbauer and Bjarne Stoustroup},
    title = {Understanding and Effectively Preventing the ABA Problem in Descriptor-based Lock-free Designs},
    year = {2010},
    url = {http://www.stroustrup.com/isorc2010.pdf},
    note = {Online; accessed 14-December-2015}
}

@article{snoopycache,
year={1988},
issn={0178-4617},
journal={Algorithmica},
volume={3},
number={1-4},
title={Competitive snoopy caching},
url={http://dx.doi.org/10.1007/BF01762111},
publisher={Springer-Verlag},
keywords={Shared-bus multiprocessors; Amortized analysis; Potential functions; Page replacement; Shared memory; Cache coherence},
author={Karlin, Anna R. and Manasse, Mark S. and Rudolph, Larry and Sleator, Daniel D.},
pages={79-119},
language={English}
}

@misc{pr:volatile,
    author = {Peter Ritchie},
    title = {volatile - You Keep Using That Word, But I Do Not Think You Know What It Means},
    year = {2013},
    url = {http://blog.peterritchie.com/?p=1091},
    note = {Online; accessed 15-December-2015}
}

@misc{quora:cppthr,
    author = {Robert Love},
    title = {How are the threading and memory models different in C++ as compared to C?},
    year = {2014},
    url = {http://www.quora.com/C++-programming-language/How-are-the-threading-and-memory-models-different-in-C++-as-compared-to-C},
    note = {Online; accessed 16-December-2015}
}

@misc{cppconcurrency,
    author = {Hans J. Boehm and Sarita V. Adve},
    title = {Foundations of the C++ Concurrency Memory Model},
    year = {2008},
    url = {http://rsim.cs.illinois.edu/Pubs/08PLDI.pdf},
    note = {Online; accessed 16-December-2015}
}

@misc{gcc:inlining,
    author = {{GNU Compiler Collection}},
    title = {An Inline Function is As Fast As a Macro},
    year = {2016},
    url = {https://gcc.gnu.org/onlinedocs/gcc/Inline.html},
    note = {Online; accessed 6-January-2016}
}

@misc{msdn:pgo,
    author = {Ankit Asthana},
    title = {Build faster and high performing native applications using PGO},
    year = {2013},
    url = {http://blogs.msdn.com/b/vcblog/archive/2013/04/04/how-to-build-faster-and-high-performing-native-applications-using-pgo.aspx},
    note = {Online; accessed 6-January-2016}
}

@misc{cudaguide,
    author = {{nVIDIA}},
    title = {{CUDA C Programming Guide, version 7.5}},
    year = {2015},
    url = {http://docs.nvidia.com/cuda/pdf/CUDA_C_Programming_Guide.pdf},
    note = {Online; accessed 6-January-2016}
}

@misc{amdguide,
    author = {{AMD}},
    title = {AMD Accelerated Parallel Processing OpenCL Programming Guide, v.2.7},
    year = {2013},
    url = {http://developer.amd.com/gpu/amdappsdk/assets/AMD_Accelerated_Parallel_Processing_OpenCL_Programming_Guide.pdf},
    note = {Online; accessed 6-January-2016}
}

@misc{cellprimer,
    author = {Sony Computer Entertainment},
    title = {Cell Programming Primer},
    year = {2008},
    url = {https://www.kernel.org/pub/linux/kernel/people/geoff/cell/ps3-linux-docs/CellProgrammingPrimer.html},
    note = {Online; accessed 6-January-2016}
}

@misc{khronos,
    author = {Khronos Group},
    title = {{OpenCL 2.1 and SPIR-V 1.0 Launch}},
    year = {2015},
    url = {https://www.khronos.org/assets/uploads/developers/library/overview/opencl_overview.pdf},
    note = {Online; accessed 6-January-2016}
}

@misc{scrypt,
    author = {Colin Percival},
    title = {Stronger Key Derivation via Sequential Memory-Hard Functions},
    year = {2009},
    url = {http://www.bsdcan.org/2009/schedule/attachments/87_scrypt.pdf},
    note = {Online; accessed 6-January-2016}
}

@misc{xkcd:security,
    author = {Randall Munroe},
    title = {{xkcd: Security}},
    url = {https://xkcd.com/538/},
    note = {Online; accessed 6-January-2016}
}

@misc{hpcmpi,
    author = {Jonathan Dursi},
    title = {{HPC is dying, and MPI is killing it}},
    year = {2015},
    url = {http://www.dursi.ca/hpc-is-dying-and-mpi-is-killing-it/},
    note = {Online; accessed 6-January-2016}
}

@misc{scalecost,
	author = {Frank McSherry},
	title = {Scalability! But at what COST?},
	year = {2015},
	url = {http://www.frankmcsherry.org/graph/scalability/cost/2015/01/15/COST.html},
	note = {Online; accessed 11-January-2016}
}

@misc{graphx,
	author = {Joseph E. Gonzalez and Reynold S. Xin and Ankur Dave and Daniel Crankshaw and Michael J. Franklin and Ion Stoica},
	title = {GraphX: Graph Processing in a Distributed Dataflow Framework},
	year = {2014},
	url = {https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-gonzalez.pdf},
	note = {11th USENIX Symposium on Operating Systems Design and Implementation}
}

@misc{awsscale,
    author = {Todd Hoff},
    title = {{A Beginner's Guide To Scaling To 11 Million+ Users on Amazon's AWS}},
    year = {2016},
    url = {http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html},
    note = {Online; accessed 16-January-2016}
}
